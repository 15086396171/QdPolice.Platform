@using System.Web.Optimization
@using Abp.Web.Mvc.Extensions
@model Vickn.Platform.Announcements.Dtos.AnnouncementForEdit

@{
    ViewBag.Menu = L("Announcements");
    ViewBag.SubMenu = L("Announcement");
}
<div class="row animated fadeInRight">
  <div class="ibox-content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger summary-validation-error" })

        <div class="form-horizontal">

          <div class="hidden">
            @Html.HiddenFor(model => model.AnnouncementEditDto.Id)
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.AnnouncementEditDto.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
              @Html.EditorFor(model => model.AnnouncementEditDto.Title, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.AnnouncementEditDto.Title, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.AnnouncementEditDto.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
              @Html.TextAreaFor(model => model.AnnouncementEditDto.Content, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.AnnouncementEditDto.Content, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.AnnouncementEditDto.AnnouncementUsers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
              @*@Html.EditorFor(model => model.AnnouncementEditDto.Title, new { htmlAttributes = new { @class = "form-control",onclick="showMenu()" } })*@

              <input type="text" readonly="readonly" class="form-control" value="@(string.Join(",",Model.AnnouncementEditDto.AnnouncementUsers.Select(p => p.User.Name)))" id="names" onclick="showMenu()" />
              <div id="users">
                @for (int i = 0; i < Model.AnnouncementEditDto.AnnouncementUsers.Count; i++)
                {
                    @Html.HiddenFor(model => model.AnnouncementEditDto.AnnouncementUsers[i].Id)
                    @Html.HiddenFor(model => model.AnnouncementEditDto.AnnouncementUsers[i].UserId)
                    @Html.HiddenFor(model => model.AnnouncementEditDto.AnnouncementUsers[i].AnnouncementId)

                    @*<input name="AnnouncementEditDto.AnnouncementUsers[0].Id" type="hidden" value="false">*@
                }
              </div>
              @Html.ValidationMessageFor(model => model.AnnouncementEditDto.AnnouncementUsers, "", new { @class = "text-danger" })
            </div>
          </div>


          @Html.Partial("/Views/Common/_FooterWithSaveAndCancel.cshtml")
        </div>

        <div id="menuContent" class="menuContent" style="display: none;">
          <div class="organizationUnit ztree"></div>
        </div>
    }
  </div>
</div>

@section styles{
  <link href="~/Scripts/wangEditor-2.1.23/dist/css/wangEditor.css" rel="stylesheet" />
  @Styles.Render("~/Bundles/lib/css/ztree/metro")
  <style>
    #AnnouncementEditDto_Content {
      height: 300px;
    }
  </style>
}

@section scripts{
  <script src="~/Scripts/wangEditor-2.1.23/dist/js/wangEditor.js"></script>
  @Scripts.Render("~/Bundles/lib/js/ztree/core")
  @Html.IncludeScript("~/js/OuWithUsersTree.js")
  <script>
    function showMenu() {
      //页面层
      layer.open({
        type: 1,
        title: "选择接收用户",
        skin: 'layui-layer-rim', //加上边框
        shade: 0,
        area: ['420px', '400px'], //宽高
        content: $("#menuContent"),
        btn: ["确定"],
        yes: function (index) {
          layer.close(index);
        }
      });
    }
    $(document).ready(function () {
      var selectedUsers = [];
      var selectedUserNames = [];
      var editor = new wangEditor('AnnouncementEditDto_Content');
      editor.create();

      var ouTree = new OuWithUsersTree();
      ouTree.init($(".organizationUnit"), function (node) {
        console.log(node)
        getChildrenUsers(node);

        $("#names").val(selectedUserNames.join(','));
        $("#users").children().remove();
        $.each(selectedUsers, function (index, data) {
          $("#users").append('<input name="AnnouncementEditDto.AnnouncementUsers[' +
            index +
            '].Id" type="hidden" value="">');
          $("#users").append('<input name="AnnouncementEditDto.AnnouncementUsers[' +
            index +
            '].UserId" type="hidden" value="' +
            data +
            '">');
          $("#users").append('<input name="AnnouncementEditDto.AnnouncementUsers[' +
            index +
            '].AnnouncementId" type="hidden" value="' +
            $("#AnnouncementEditDto_Id").val() +
            '">');
        })
      })

      function getChildrenUsers(node) {
        console.log(node.isUser, node.displayName);
        if (node.isUser) {
          if (node.checked === true) {
            selectedUsers.push(node.id);
            selectedUserNames.push(node.displayName);
          } else {
            selectedUsers.splice($.inArray(node.id, selectedUsers), 1);
            selectedUserNames.splice($.inArray(node.displayName, selectedUserNames), 1);
          }
        }
        $.each(node.children,
          function (index, child) {
            getChildrenUsers(child);
          });
      }
    })
  </script>
}



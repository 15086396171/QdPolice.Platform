@model Vickn.Platform.PbManagement.ChangeWorks.Dtos.ChangeWorkForEdit

@{
    ViewBag.Menu = L("ChangeWorks");
    ViewBag.SubMenu = L("ChangeWork");
}
<div class="ibox-content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger summary-validation-error" })

        <div class="form-horizontal">

            <div class="hidden">
                @Html.HiddenFor(model => model.ChangeWorkEditDto.Id)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.BeUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.BeUserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.BeUserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.Reason, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.Reason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.TimeStr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.TimeStr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.TimeStr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.BeTimeStr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.BeTimeStr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.BeTimeStr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.PositionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.PositionName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.PositionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.BePositionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.BePositionName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.BePositionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.StatusDes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.StatusDes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.StatusDes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.Leader, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ChangeWorkEditDto.Leader, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.Leader, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangeWorkEditDto.IsOnDuty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8 skin-minimal">
                    <div class="check-box">
                        @Html.EditorFor(model => model.ChangeWorkEditDto.IsOnDuty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChangeWorkEditDto.IsOnDuty, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            @Html.Partial("/Views/Common/_FooterWithSaveAndCancel.cshtml")
        </div>
    }
</div>


@section styles{
    <style>
    </style>
}

@section scripts{
    <script>

    </script>
}



@using Abp.Application.Services.Dto
@using Abp.Web.Mvc.Extensions
@using Vickn.Platform.DataDictionaries
@model Vickn.Platform.Users.Dtos.GetUserForEdit

@{
    ViewBag.Title = "Create";
    ViewBag.Menu = L("User");
    ViewBag.SecMenu = L("User");
}
<div class="ibox-content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger summary-validation-error" })

        <div class="form form-horizontal">
            <!--隐藏字段-->
            <div class="hidden">
                @Html.HiddenFor(model => model.UserEditDto.IsActive)
                @Html.HiddenFor(model => model.UserEditDto.Id)
                @Html.HiddenFor(model => model.OuId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserEditDto.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserEditDto.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.Name, "", new { @class = "" })
                </div>
            </div>

          <div class="form-group">
            @Html.LabelFor(model => model.UserEditDto.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.UserEditDto.UserName, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.UserEditDto.UserName, "", new { @class = "text-danger" })
            </div>
          </div>
          
          <div class="form-group">
            @Html.LabelFor(model => model.UserEditDto.PoliceNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.UserEditDto.PoliceNo, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.UserEditDto.PoliceNo, "", new { @class = "text-danger" })
            </div>
          </div>
          
            @*<div class="form-group">
                @Html.LabelFor(model => model.UserEditDto.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserEditDto.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.Position, "", new { @class = "text-danger" })
                </div>
            </div>*@
            
            @*///职位list*@
            <div class="form-group">
                @Html.LabelFor(model => model.UserEditDto.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Position", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DataDictionaryItems, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.UserEditDto.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.UserEditDto.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.UserEditDto.PhoneNumber, "", new { @class = "text-danger" })
            </div>
          </div>
          
          <div class="form-group">
            @Html.LabelFor(model => model.UserEditDto.Landline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.UserEditDto.Landline, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.UserEditDto.Landline, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.UserEditDto.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.UserEditDto.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.UserEditDto.EmailAddress, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.UserEditDto.ShouldChangePasswordOnNextLogin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              <label class="checkbox-inline i-checks">默认密码：88888888
                @Html.CheckBoxFor(model => model.UserEditDto.ShouldChangePasswordOnNextLogin, new { htmlAttributes = new { @class = "" } })
              </label>
              @Html.ValidationMessageFor(model => model.UserEditDto.ShouldChangePasswordOnNextLogin, "", new { @class = "text-danger" })
            </div>
          </div>

            <div class="hr-line-dashed"></div>
            <!--角色-->
            <div class="form-group">
                @Html.LabelFor(model => model.UserRoleDtos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @for (int i = 0; i < Model.UserRoleDtos.Length; i++)
                    {
                        <label class="checkbox-inline i-checks">
                            @Html.CheckBoxFor(model => model.UserRoleDtos[i].IsAssigned, new { id = "checkbox_" + Model.UserRoleDtos[i].RoleId })<i></i>@Model.UserRoleDtos[i].RoleDisplayName
                            @Html.HiddenFor(model => model.UserRoleDtos[i].RoleId)
                            @Html.HiddenFor(model => model.UserRoleDtos[i].RoleDisplayName)
                            @Html.HiddenFor(model => model.UserRoleDtos[i].RoleName)
                        </label>
                    }
                    @Html.ValidationMessageFor(model => model.UserRoleDtos, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.Partial("/Views/Common/_FooterWithSaveAndCancel.cshtml")
        </div>

    }
</div>
@section scripts{
    @Html.IncludeScript("~/Views/Users/Create.js")
}





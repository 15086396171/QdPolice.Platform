@using Abp.Web.Mvc.Extensions
@model Vickn.Platform.Users.Dtos.GetUserForEdit

@{
    ViewBag.Title = "Create";
    ViewBag.Menu = L("User");
    ViewBag.SecMenu = L("User");
}
@Html.Partial("~/Views/Common/_Navigation.cshtml")
<div class="page-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "Huialert Huialert-danger summary-validation-error" })

        <div class="form form-horizontal">
            <!--隐藏字段-->
            <div class="hidden">
                @Html.HiddenFor(model => model.UserEditDto.IsActive)
                @Html.HiddenFor(model => model.UserEditDto.Id)
                @Html.HiddenFor(model => model.OuId)
            </div>
            <div class="row cl">
                @Html.LabelFor(model => model.UserEditDto.Name, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.UserEditDto.Name, new { htmlAttributes = new { @class = "input-text" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.UserEditDto.UserName, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.UserEditDto.UserName, new { htmlAttributes = new { @class = "input-text" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.UserEditDto.Surname, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.UserEditDto.Surname, new { htmlAttributes = new { @class = "input-text" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.UserEditDto.PhoneNumber, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.UserEditDto.PhoneNumber, new { htmlAttributes = new { @class = "input-text" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.UserEditDto.EmailAddress, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.UserEditDto.EmailAddress, new { htmlAttributes = new { @class = "input-text" } })
                    @Html.ValidationMessageFor(model => model.UserEditDto.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.UserEditDto.ShouldChangePasswordOnNextLogin, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8 skin-minimal">
                    <div class="check-box">
                        @Html.CheckBoxFor(model => model.UserEditDto.ShouldChangePasswordOnNextLogin, new { htmlAttributes = new { @class = "" } })
                        <label for="checkbox-pinglun">&nbsp;</label>
                    </div>
                    @Html.ValidationMessageFor(model => model.UserEditDto.ShouldChangePasswordOnNextLogin, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--角色-->
            <div class="row cl">
                @Html.LabelFor(model => model.UserRoleDtos, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8  skin-minimal">
                    <dl>
                        <dd>
                            @for (int i = 0; i < Model.UserRoleDtos.Length; i++)
                            {
                                <div class="check-box">
                                    @Html.CheckBoxFor(model => model.UserRoleDtos[i].IsAssigned, new { id = "checkbox_" + Model.UserRoleDtos[i].RoleId })
                                    <label for="checkbox_@(Model.UserRoleDtos[i].RoleId)">@Model.UserRoleDtos[i].RoleDisplayName</label>
                                    @Html.HiddenFor(model => model.UserRoleDtos[i].RoleId)
                                    @Html.HiddenFor(model => model.UserRoleDtos[i].RoleDisplayName)
                                    @Html.HiddenFor(model => model.UserRoleDtos[i].RoleName)
                                </div>
                            }
                        </dd>
                    </dl>
                    @Html.ValidationMessageFor(model => model.UserRoleDtos, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.Partial("/Views/Common/_FooterWithSaveAndCancel.cshtml")
        </div>

    }
</div>
@section scripts{
    @Html.IncludeScript("~/Views/Users/Create.js")
}





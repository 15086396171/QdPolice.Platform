@using Abp.Web.Mvc.Extensions
@model Vickn.Platform.Roles.Dtos.GetRoleForEditOutput

@{
    ViewBag.Title = "Create";
}
@{
    ViewBag.Menu = L("Role");
    ViewBag.SecMenu = L("Role");
    ViewBag.createBtn = L("CreateRole");
    ViewBag.editBtn = L("EditRole");

    ViewBag.ActiveMenu = "Roles"; //The menu item will be active for this page.
}

<div class="ibox-content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger summary-validation-error" })

            <div class="form-group">
                @Html.LabelFor(model => model.RoleEditDto.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoleEditDto.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleEditDto.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleEditDto.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoleEditDto.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleEditDto.DisplayName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleEditDto.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoleEditDto.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleEditDto.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="hr-line-dashed"></div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleEditDto.IsDefault, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label class="checkbox-inline i-checks">
                        @Html.EditorFor(model => model.RoleEditDto.IsDefault, new { htmlAttributes = new { @class = "form-control" } })<i></i>
                    </label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleEditDto.IsStatic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label class="checkbox-inline i-checks">
                        @Html.EditorFor(model => model.RoleEditDto.IsStatic, new { htmlAttributes = new { @class = "form-control" } })<i></i>
                    </label>
                </div>
            </div>

            @Html.Partial("/Views/Common/_FooterWithSaveAndCancel.cshtml")
        </div>

    }
</div>
@section scripts{
    @Html.IncludeScript("~/Views/Users/Create.js")
}





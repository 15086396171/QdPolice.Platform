@using Abp.Web.Mvc.Extensions
@model Vickn.Platform.Roles.Dtos.GetRoleForEditOutput

@{
    ViewBag.Title = "Create";
}
@{
    ViewBag.Menu = L("Role");
    ViewBag.SecMenu = L("Role");
    ViewBag.createBtn = L("CreateRole");
    ViewBag.editBtn = L("EditRole");

    ViewBag.ActiveMenu = "Roles"; //The menu item will be active for this page.
}
@Html.Partial("~/Views/Common/_Navigation.cshtml")
<div class="page-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "Huialert Huialert-danger summary-validation-error" })

        <div class="form form-horizontal">
            <div class="row cl">
                @Html.LabelFor(model => model.RoleEditDto.Name, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.RoleEditDto.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleEditDto.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.RoleEditDto.DisplayName, htmlAttributes: new {@class = "form-label col-xs-4 col-sm-3"})
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.RoleEditDto.DisplayName, new {htmlAttributes = new {@class = "input-text"}})
                    @Html.ValidationMessageFor(model => model.RoleEditDto.DisplayName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.RoleEditDto.Weight, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8">
                    @Html.EditorFor(model => model.RoleEditDto.Weight, new { htmlAttributes = new { @class = "input-text" } })
                    @Html.ValidationMessageFor(model => model.RoleEditDto.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.RoleEditDto.IsDefault, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8 skin-minimal">
                    <div class="check-box">
                        @Html.EditorFor(model => model.RoleEditDto.IsDefault, new { htmlAttributes = new { @class = "input-text" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.RoleEditDto.IsDefault, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row cl">
                @Html.LabelFor(model => model.RoleEditDto.IsStatic, htmlAttributes: new { @class = "form-label col-xs-4 col-sm-3" })
                <div class="formControls col-xs-8 col-sm-8 skin-minimal">
                    <div class="check-box">
                        @Html.EditorFor(model => model.RoleEditDto.IsStatic, new { htmlAttributes = new { @class = "input-text" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.RoleEditDto.IsStatic, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.Partial("/Views/Common/_FooterWithSaveAndCancel.cshtml")
        </div>

    }
    </div>
    @section scripts{
        @Html.IncludeScript("~/Views/Users/Create.js")
    }




